pipeline{
    agent any
    tools{
        maven 'maven'
    }
    stages{
        stage('Package'){
            steps{
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test'){
            steps{
                sh 'mvn test'
            }
            post{
            always{
                junit 'target/surefire-reports/*.xml'
            }
        }
        }
        stage('collect artifact'){
          steps{
            archiveArtifacts artifacts : 'target/*.jar',followSymlinks : false
            }
            }
        stage('deploy to artifactory'){
        steps{
        rtUpload(
         serverId : 'ARTIFACTORY_SERVER',
         spec :'''{
           "files" :[
           {
           "pattern":"target/*.jar",
           "target":"artifactory-docker-dev-local"
           }
           ]
         }''',
         
         buildName : 'holyFrog',
         buildNumber : '42'
      )
      }
      }
    }
    
    post {  
         always {  
             echo 'This will always run'  
         }  
         success {   
            echo "========Successfully Deployed========"
            mail bcc: '', body: 'deploying is sucesfull', cc: '', from: '', replyTo: '', subject: 'deployed', to: 'karthigavj8599@gmail.com'
         }  
         failure {  
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'karthigavj8599@gmail.com', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "karthigavj8599@gmail.com";  
         }  
         unstable {  
             echo 'This will run only if the run was marked as unstable'  
         }  
         changed {  
             echo 'This will run only if the state of the Pipeline has changed'  
             echo 'For example, if the Pipeline was previously failing but is now successful'  
         }  
     }
}
